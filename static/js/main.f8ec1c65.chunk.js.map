{"version":3,"sources":["Context/app-context.js","Components/Answers.js","Components/QuizLayout.js","Context/reducer.js","Context/AppState.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","createContext","Answers","lst","React","useContext","quizListArray","list","SET_QUIZLIST_ARRAY","useEffect","console","log","className","map","item","index","questionString","rightChoice","url","QuizLayout","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","quizList","setQuizList","currrentSelected","setCurrrentSelected","a","fetch","method","dataType","then","response","json","data","i","length","quiz","push","catch","err","window","alert","getQuestions","handleAnswerOptionClick","isCorrect","nextQuestion","checkSelection","choices","onClick","location","reload","answerOption","type","name","value","onChange","e","target","color","height","width","reducer","state","action","payload","AppState","props","useReducer","dispatch","Provider","children","Header","href","class","size","style","fill","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8ec1c65.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;\n\n","import React, { useEffect } from \"react\";\nimport Quiz from \"./QuizLayout\";\nimport AppContext from \"../Context/app-context\";\n\n//This class handles showing the right answers\n//after the quiz is subbmitted by the user\n\nfunction Answers({ lst }) {\n  const { quizListArray, SET_QUIZLIST_ARRAY } = React.useContext(AppContext);\n\n  var list = quizListArray;\n  useEffect(() => {\n    console.log(list);\n  }, [quizListArray]);\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  return (\n    <div className=\"answers-list\">\n      {list ? (\n        <div>\n          <h2>Answers</h2>\n\n          {list?.map((item, index) => {\n            return (\n              <div className=\"answer-card\" key={index}>\n                <div className=\"answer-section\">\n                  <div className=\"answer-count\">\n                    <p> Q{index + 1}. </p>\n                    <p>{item.questionString}</p>\n                  </div>\n                  <div className=\"answer-count\">\n                    <p>Answer: {item.rightChoice}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default Answers;\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport Answers from \"./Answers\";\nimport AppContext from \"../Context/app-context\";\n\nvar url = \"https://mongo-quiz-rest.herokuapp.com/quizes/QuizCollection\";\n\nexport function QuizLayout() {\n  const { quizListArray, SET_QUIZLIST_ARRAY } = React.useContext(AppContext);\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [quizList, setQuizList] = useState([]);\n  const [currrentSelected, setCurrrentSelected] = useState(null);\n  const [seeAnswer, setSeeAnswer] = useState(false);\n\n  useEffect(() => {\n    getQuestions();\n  }, []);\n\n  async function getQuestions() {\n    await fetch(url, {\n      method: \"get\",\n      dataType: \"json\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        var list = [];\n        for (var i = 0; i < data.length; i++) {\n          var quiz = data[i];\n          list.push(quiz);\n        }\n        setQuizList(list);\n        SET_QUIZLIST_ARRAY(list);\n      })\n      .catch((err) => {\n        window.alert(\"Server Unresponsive\");\n      });\n  }\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    setCurrrentSelected(null);\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizList.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  const checkSelection = () => {\n    var isCorrect = false;\n    if (\n      quizList[currentQuestion].choices[currrentSelected] ===\n      quizList[currentQuestion].rightChoice\n    ) {\n      handleAnswerOptionClick((isCorrect = true));\n    }\n    handleAnswerOptionClick(isCorrect);\n  };\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  return (\n    <div>\n      {quizList?.length > 0 ? (\n        <h1>Good Luck</h1>\n      ) : (\n        <div>\n          <h3>Welcome to the Quiz App</h3>\n        </div>\n      )}\n\n      <div className=\"\">\n        {showScore ? ( // the quiz is finishes, show the score\n          <div>\n            <div className=\"app-score\">\n              <div className=\"score-section \">\n                <span>\n                  You scored {score} out of {quizList.length} (\n                  {(score / quizList.length) * 100}%)\n                </span>\n              </div>\n              <button className=\"retry-button\" onClick={refreshPage}>\n                Retry!\n              </button>\n            </div>\n            <div className=\"answers\">\n              <Answers list={quizList} />\n            </div>\n          </div>\n        ) : quizList.length > 0 ? ( // the list is found, render the UI component to display the questions\n          <div className=\"app\">\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>Question {currentQuestion + 1}</span>/{quizList.length}\n              </div>\n              <div className=\"question-text\">\n                {quizList[currentQuestion].questionString}\n              </div>\n            </div>\n            <div className=\"answer-section\">\n              {quizList[currentQuestion].choices.map((answerOption, index) => (\n                <div key={index}>\n                  <div className=\"radio\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"radiobutton\"\n                        value={index}\n                        onChange={(e) => setCurrrentSelected(e.target.value)}\n                      />\n                      {quizList[currentQuestion].choices[index]}\n                    </label>\n                  </div>\n                </div>\n              ))}\n              {currentQuestion === quizList.length - 1 ? (\n                <button onClick={checkSelection}>Submit Quiz</button>\n              ) : (\n                <div>\n                  {currrentSelected !== null ? (\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-default\"\n                      onClick={checkSelection}\n                    >\n                      Next\n                    </button>\n                  ) : (\n                    <div />\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          //the loading state\n          <div className=\"\">\n            <Loader type=\"Bars\" color=\"##A9A9A9\" height={80} width={80} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default QuizLayout;\n","// Selector\nconst reducer = (state, action) => {\n  console.log(action, action.payload);\n  switch (action.type) {\n    case \"SET_QUIZLIST_ARRAY\":\n      return {\n        ...state,\n        quizListArray: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useReducer } from \"react\";\nimport AppContext from \"./app-context\";\nimport reducer from \"./reducer\";\n\nconst AppState = (props) => {\n  const initialState = {\n    quizListArray: [],\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //Method to set the search object\n  const SET_QUIZLIST_ARRAY = (quizListArray) => {\n    dispatch({\n      type: \"SET_QUIZLIST_ARRAY\",\n      payload: quizListArray,\n    });\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        quizListArray: state.quizListArray,\n\n        SET_QUIZLIST_ARRAY,\n      }}\n    >\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppState;\n","import React from \"react\";\nimport { IoLogoLinkedin } from \"react-icons/io\";\nimport {\n  FaGithub,\n  FaLinkedinIn,\n  FaGooglePlusG,\n  FaUserGraduate,\n} from \"react-icons/fa\";\n\n// This class manages the headers (social profiles, and copyrights)\nfunction Header() {\n  return (\n    <div>\n      <div className=\"social\">\n        <ul>\n          <a\n            href=\"https://www.linkedin.com/in/saneel-daniel/\"\n            class=\"icon-block\"\n          >\n            <FaLinkedinIn size={30} style={{ fill: \"black\" }} />\n          </a>\n          <a href=\"https://github.com/SaneelDaniel\" class=\"icon-block\">\n            <FaGithub size={30} style={{ fill: \"black\" }} />\n          </a>\n          <a href=\"mailto:saneel.daniel07@gmail.com\" class=\"icon-block\">\n            <FaGooglePlusG size={30} style={{ fill: \"black\" }} />\n          </a>\n          <a\n            href=\"http://danielsaneeldennis--portfolio.web.app/\"\n            class=\"icon-block\"\n          >\n            <FaUserGraduate size={30} style={{ fill: \"black\" }} />\n          </a>\n        </ul>\n      </div>\n\n      <ul className=\"copyright\">\n        <span>&copy; 2021 Saneel Daniel </span>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","import \"./App.css\";\nimport Quiz from \"./Components/QuizLayout\";\nimport Answers from \"./Components/Answers\";\nimport AppState from \"./Context/AppState\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz />\n      <Header />\n    </div>\n  );\n}\n\nexport default () => {\n  return (\n    <AppState>\n      <App />\n    </AppState>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n/*\nStarter files created by create-react-app\n*/\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}